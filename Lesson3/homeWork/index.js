console.log("кот" > "код"); //true,т.к. сравнение строк дойдет до третьего символа, и так буква "т" будет больше буквы "д" по таблице Unicode
console.log("2" + 2 * "2"); //24, сначала выполнится действие умножения с преобразованием строки "2" в число, затем конкатенация строки "2" с получившимся числовым значением 4
console.log(undefined == null); //true, правило языка
console.log(undefined != null); //false, т.к. undefined равен null
console.log(null == 0); // false, равен самому себе и undefined
console.log(2 > "3"); //false, т.к. строка со значением 3 преобразуется в 3 типа Number
console.log(null - false + true); //1, 0-0+1
console.log(1 / "l"); //NaN, т.к. l не сможет привестись к типу Number
console.log("2" * "3"); //6, будет преобразование каждой строки к Number
console.log(4 + 5 + "O"); // "9O",Конкатенация строк. т.к сначала выполнится сложение 4+5, будет 9, затем 9 складывается со строкой
console.log("l" + 4 + 5); //"l45",Конкатенация строк. сначала строка со значение l будет складываться с цифрой 4 и получится результат "l4",  далее эта строка складывается с цифрой 5.
console.log("4" - 2); //2, строка со значением 4 преобразуется в числовое значение 4
console.log("4" - "4x"); //NaN,т.к. преобразование строки "4x" к числу невозможно
console.log("23" == 23); // true, преобразование строки к Number
console.log(null == false); //false, null == только undefined и самому себе
console.log(" -4 " / 0 + 1); //-Infinity, т.к. происходит численное преобразование строки, затем ее деление на 0, что дает -Infinity
console.log(null + 1); //1, null преобразуется в 0
console.log(undefined + null); //NaN, т.к. при численном преобразовании undefined становится NaN
console.log(1 === "1"); //false, === строгое равенство, при котором сравнивается не только значения, но и типа данных, в нашем случае number и string
console.log("2" > 10); //false, т.к  строка будет приведена к цифре 2
console.log(NaN == undefined); //false, т.к undefined равен только самому себе и null
